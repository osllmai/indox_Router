name: Publish Python Package to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Verify version matches tag
        run: |
          # Extract version from tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}

          # Get version from pyproject.toml
          PACKAGE_VERSION=$(python -c "
          import tomllib
          with open('pyproject.toml', 'rb') as f:
              data = tomllib.load(f)
              print(data['project']['version'])
          ")

          echo "Tag version: $TAG_VERSION"
          echo "Package version: $PACKAGE_VERSION"

          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Version mismatch! Tag: $TAG_VERSION, Package: $PACKAGE_VERSION"
            exit 1
          fi

      - name: Build package
        run: python -m build

      - name: Check package
        run: python -m twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
