version: "3.8"

services:
  indoxrouter-server:
    build: .
    container_name: indoxrouter-server
    expose:
      - "8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - DEFAULT_PROVIDER=${DEFAULT_PROVIDER}
      - DEFAULT_CHAT_MODEL=${DEFAULT_CHAT_MODEL}
      - DEFAULT_COMPLETION_MODEL=${DEFAULT_COMPLETION_MODEL}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS}
      - RATE_LIMIT_PERIOD_SECONDS=${RATE_LIMIT_PERIOD_SECONDS}
      # Database connection settings
      - POSTGRES_HOST=indoxrouter-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=indoxrouter
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@indoxrouter-postgres:5432/indoxrouter
      # MongoDB connection settings
      - MONGO_HOST=indoxrouter-mongodb
      - MONGO_PORT=27017
      - MONGO_USER=${MONGO_APP_USER}
      - MONGO_PASSWORD=${MONGO_APP_PASSWORD}
      - MONGODB_DATABASE=indoxrouter
      - MONGODB_URI=mongodb://${MONGO_APP_USER}:${MONGO_APP_PASSWORD}@indoxrouter-mongodb:27017/indoxrouter?authSource=admin&authMechanism=SCRAM-SHA-256
      # Redis settings
      - REDIS_HOST=indoxrouter-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # App settings
      - INDOXROUTER_PRODUCTION_MODE=true
      - ENABLE_RESPONSE_CACHE=true
      - CACHE_TTL_DAYS=${CACHE_TTL_DAYS}
    volumes:
      - ./indoxrouter_server:/app/indoxrouter_server
      - app-logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - indox-network
    restart: unless-stopped

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: indoxrouter-admin
    environment:
      - VITE_API_BASE_URL=/api/v1
      - NODE_ENV=production
    networks:
      - indox-network
    depends_on:
      - indoxrouter-server

  postgres:
    image: postgres:15-alpine
    container_name: indoxrouter-postgres
    environment:
      - POSTGRES_DB=indoxrouter
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    command: postgres -c listen_addresses='*'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d indoxrouter"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - indox-network
    restart: unless-stopped

  mongodb:
    image: mongo:6
    container_name: indoxrouter-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=indoxrouter
      - MONGO_APP_USER=${MONGO_APP_USER}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: mongod --auth
    ports:
      - "27019:27017"
    networks:
      - indox-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: indoxrouter-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --bind 0.0.0.0
    volumes:
      - redis-data:/data
    networks:
      - indox-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: indoxrouter-nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - indoxrouter-server
      - admin
    networks:
      - indox-network

volumes:
  postgres-data:
  mongo-data:
  redis-data:
  app-logs:

networks:
  indox-network:
    driver: bridge
