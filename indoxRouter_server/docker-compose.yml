version: "3"

services:
  indoxrouter-server:
    build: .
    container_name: indoxrouter-server
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - DEFAULT_PROVIDER=${DEFAULT_PROVIDER:-openai}
      - DEFAULT_CHAT_MODEL=${DEFAULT_CHAT_MODEL:-gpt-3.5-turbo}
      - DEFAULT_COMPLETION_MODEL=${DEFAULT_COMPLETION_MODEL:-gpt-3.5-turbo-instruct}
      - DEFAULT_EMBEDDING_MODEL=${DEFAULT_EMBEDDING_MODEL:-text-embedding-ada-002}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_PERIOD_SECONDS=${RATE_LIMIT_PERIOD_SECONDS:-60}
      - DATABASE_URL=postgresql://postgres:postgrespassword@indoxrouter-postgres:5432/indoxrouter
      - MONGODB_URI=mongodb://indoxrouter-mongodb:27017/indoxrouter
      - MONGODB_DATABASE=indoxrouter
      - INDOXROUTER_LOCAL_MODE=true
      - ENABLE_RESPONSE_CACHE=${ENABLE_RESPONSE_CACHE:-true}
      - CACHE_TTL_DAYS=${CACHE_TTL_DAYS:-7}
    volumes:
      - ./.env:/app/.env
    depends_on:
      - indoxrouter-postgres
      - indoxrouter-mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - indoxrouter-network
    # Add this line to allow Docker to connect to your host machine's PostgreSQL
    extra_hosts:
      - "host.docker.internal:host-gateway"

  indoxrouter-postgres:
    image: postgres:15
    container_name: indoxrouter-postgres
    environment:
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_USER=postgres
      - POSTGRES_DB=indoxrouter
    volumes:
      - indoxrouter_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Changed port to avoid conflict with local PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - indoxrouter-network

  indoxrouter-mongodb:
    image: mongo:6
    container_name: indoxrouter-mongodb
    volumes:
      - indoxrouter_mongodb_data:/data/db
    ports:
      - "27018:27017" # Changed port to avoid conflict with local MongoDB
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - indoxrouter-network

volumes:
  indoxrouter_postgres_data:
  indoxrouter_mongodb_data:

networks:
  indoxrouter-network:
    driver: bridge
